@model ECJ.Web.Models.tblActivite

@{
    ViewBag.Title = "Ajout";
}

<h2>Activite</h2>

<!-- Evenement, Sous-Evenement-->
@*@model Tuple<int?, int?>
    @{ 
        string nomHidden = "noEvenement";
        int valeur = 0;
        if (Model.Item1 == null)
        {
            nomHidden = "noSousEvenement";
            valeur = (int)Model.Item2;
        }
        else
        {
            valeur = (int)Model.Item1;
        }
    }*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>tblActivite</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nomResponsable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nomResponsable, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nomResponsable, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.etat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.etat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.etat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateCreation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateCreation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dateCreation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tache, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tache, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tache, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.detail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.detail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.detail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.noEvenement, "noEvenement", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("noEvenement", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.noEvenement, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.noSousEvenement, "noSousEvenement", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("noSousEvenement", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.noSousEvenement, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Ajout" class="btn btn-primary pull-right" />
            </div>
        </div>
    </div>

    <div>
        <a href="/Activite/Index" class="btn btn-sm btn-primary" title="Index"> Retourner à la liste</a>
    </div>
}