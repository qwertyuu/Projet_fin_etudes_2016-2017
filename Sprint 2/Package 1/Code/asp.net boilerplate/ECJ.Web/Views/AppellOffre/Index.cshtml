
@using ECJ.Authorization;
@model List<ECJ.Web.Models.vueSomAppelOffre>
@{ 
    ViewBag.ActiveMenu = "AppellOffre";
}
<h1>Appels d'offre</h1>
<div class="row">
    <div class="col-md-12">
       
              @using (Html.BeginForm("Index", "AppellOffre", FormMethod.Get, new { @class = "page-header" }))
              {
                <p>

                    <div class="input-group">
                        @Html.Editor("SearchString", new { htmlAttributes = new { @class = "form-control" } })

                        <span class="input-group-btn">
                            <button class="btn btn-primary " type="submit">Rechercher</button>
                        </span>
                        <span class="input-group-btn">
                            <a href="~/AppellOffre/" class="btn btn-default">Vider</a>
                        </span>

                    </div>

                </p>

              }      
        <div id="legendeStatut" class="pull-left">
            <fieldset>
                <legend>Légende du statut</legend>
            </fieldset>
            <div id="legend">
                <div class="colorStatutHalf" style="background-color:#F90202"> </div> En création
                <div class="colorStatutHalf" style="background-color:#022BF9"> </div> Envoyé
                <div class="colorStatutHalf" style="background-color:#DBF902"> </div> Complété
                <div class="colorStatutHalf" style="background-color:#0281F9"> </div> Annulé
            </div>
        </div>   
        <br />
        @if (IsGranted(PermissionNames.CreerAppelOffre))
        {
        	<a href="~/AppellOffre/Create" data-toggle="modal" class="btn btn-primary  pull-right"><i class="fa fa-plus"></i> Ajouter un appel d'offre</a>
        }
        <table class="table" align="center" data-sortlist="[[4,0]]">
            <thead>
                <tr>
                    <th>
                      Nom
                    </th>
                    <th>
                        Date d'envoi
                    </th>
                    <th>
                        Date requise
                    </th>
                    <th data-sorter="text">
                        Événement
                    </th>
                    <th>
                        Statut
                    </th>
                    <th>
                        Agence de publicité
                    </th>
                    <th>
                        Description
                    </th>
                    <th data-sorter="false">Action</th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model)
                {
                    var @color = "#" + item.couleur;
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.nomAppelOffre)
                        </td>
                        <td>
                            @String.Format("{0:yyyy/MM/dd HH:mm:ss}", item.dateEnvoi)
                        </td>
                        <td>
                            @String.Format("{0:yyyy/MM/dd HH:mm:ss}", item.dateRequis)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.nomEvent)
                        </td>
                        <td data-text="@item.noStatut">
                            <div class="colorStatut" style="background-color:@color">  </div>
                        </td>
                        <td data-text="@(string.IsNullOrWhiteSpace(item.nomAgence) ? "." : item.nomAgence)"> 
                            @Html.DisplayFor(modelItem => item.nomAgence)                                  
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.description)
                        </td>
                        <td>
                            @if (IsGranted(PermissionNames.ConsulterAppelOffre))
                            {
                                <a href="~/AppellOffre/Details/@item.noAppelOffre" class="btn btn-sm btn-primary" title="Détail"><i class="fa fa-info-circle fa-lg"></i></a>
                            }
                            @if (IsGranted(PermissionNames.CreerAppelOffre))
                            {
                                if (item.noStatut == 1 || item.noStatut == 2)
                                {
                                    <a href="~/AppellOffre/Edit/@item.noAppelOffre" class="btn btn-sm btn-primary" title="Modifier"><i class="fa fa-pencil fa-lg"></i></a>
                                    <a href="~/AppellOffre/Delete/@item.noAppelOffre" class="btn btn-sm btn-danger" title="Supprimer l'appel d'offre"><i class="fa fa-trash fa-lg"></i></a>
                                }
                            }                      
                        </td>
                    </tr>
                }

            </tbody>
        </table>

 </div>
</div>
<br />
<br />
<button class="btn btn-default pull-right " data-dismiss="modal" onclick="javascript:window.location.reload()">Mettre à jour les soumissions</button> 



